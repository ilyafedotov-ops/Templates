{
  "kind": "Syslog",
  "properties": {
    "dataTypes": [
      {
        "name": "Syslog",
        "state": "enabled",
        "facilities": [
          {
            "name": "auth",
            "severities": ["Debug", "Info", "Notice", "Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "authpriv", 
            "severities": ["Debug", "Info", "Notice", "Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "cron",
            "severities": ["Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "daemon",
            "severities": ["Warning", "Error", "Critical", "Alert", "Emergency"] 
          },
          {
            "name": "kern",
            "severities": ["Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "local0",
            "severities": ["Debug", "Info", "Notice", "Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "mail",
            "severities": ["Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "syslog",
            "severities": ["Warning", "Error", "Critical", "Alert", "Emergency"]
          },
          {
            "name": "user",
            "severities": ["Warning", "Error", "Critical", "Alert", "Emergency"]
          }
        ]
      }
    ],
    "connectorUiConfig": {
      "title": "Syslog",
      "publisher": "Microsoft",
      "descriptionMarkdown": "Syslog is a standard for message logging that allows separation of the software that generates messages, the system that stores them, and the software that reports and analyzes them. Connect Syslog to Microsoft Sentinel to collect logs from Linux systems, network devices, and security appliances.",
      "graphQueries": [
        {
          "metricName": "Total data received",
          "legend": "Syslog",
          "baseQuery": "Syslog"
        }
      ],
      "sampleQueries": [
        {
          "description": "Authentication failures",
          "query": "Syslog | where Facility == \"auth\" or Facility == \"authpriv\" | where SyslogMessage contains \"Failed\" or SyslogMessage contains \"failed\" | summarize count() by Computer, bin(TimeGenerated, 1h)"
        },
        {
          "description": "Kernel messages",
          "query": "Syslog | where Facility == \"kern\" and SeverityLevel <= 3 | project TimeGenerated, Computer, SeverityLevel, SyslogMessage | order by TimeGenerated desc"
        },
        {
          "description": "System errors by severity",
          "query": "Syslog | where SeverityLevel <= 4 | summarize count() by Facility, SeverityLevel, bin(TimeGenerated, 1d) | order by TimeGenerated desc"
        },
        {
          "description": "SSH login attempts",
          "query": "Syslog | where ProcessName == \"sshd\" and SyslogMessage contains \"Accepted\" or SyslogMessage contains \"Failed\" | project TimeGenerated, Computer, SyslogMessage"
        }
      ],
      "dataTypes": [
        {
          "name": "Syslog",
          "lastDataReceivedQuery": "Syslog | summarize Time = max(TimeGenerated) | where isnotempty(Time)"
        }
      ],
      "connectivityCriteria": [
        {
          "type": "SentinelKindsV2",
          "value": ["Syslog"]
        }
      ],
      "availability": {
        "status": 1,
        "isPreview": false
      },
      "permissions": {
        "resourceProvider": [
          {
            "provider": "Microsoft.OperationalInsights/workspaces",
            "permissionsDisplayText": "Write permissions are required.",
            "providerDisplayName": "Workspace",
            "scope": "Workspace",
            "requiredPermissions": {
              "write": true,
              "read": false,
              "delete": false
            }
          }
        ],
        "customs": [
          {
            "name": "Syslog Agent",
            "description": "A Linux machine with the Azure Monitor Agent or Log Analytics Agent installed."
          }
        ]
      },
      "instructionSteps": [
        {
          "title": "1. Install and configure the agent",
          "description": "Install the Azure Monitor Agent or Log Analytics Agent on your Linux machines.",
          "instructions": [
            {
              "parameters": {
                "title": "Agent Installation",
                "instructionSteps": [
                  {
                    "title": "",
                    "description": "**For Azure VMs:**\n1. Go to your VM in Azure portal\n2. Select **Extensions + applications**\n3. Add **AzureMonitorLinuxAgent** or **OmsAgentForLinux**\n4. Provide workspace ID and key\n\n**For on-premises machines:**\n```bash\n# Download and install agent\nwget https://raw.githubusercontent.com/Microsoft/OMS-Agent-for-Linux/master/installer/scripts/onboard_agent.sh\nsudo sh onboard_agent.sh -w [workspace-id] -s [workspace-key]\n```"
                  }
                ]
              },
              "type": "InstructionStepsGroup"
            }
          ]
        },
        {
          "title": "2. Configure rsyslog or syslog-ng",
          "description": "Configure your syslog daemon to forward logs to the agent.",
          "instructions": [
            {
              "parameters": {
                "title": "Syslog Configuration",
                "instructionSteps": [
                  {
                    "title": "",
                    "description": "**For rsyslog (/etc/rsyslog.conf):**\n```\n# Forward all logs to oms agent\n*.* @@127.0.0.1:25224\n\n# OR forward specific facilities\nauth.* @@127.0.0.1:25224\nauthpriv.* @@127.0.0.1:25224\nkern.* @@127.0.0.1:25224\n```\n\n**For syslog-ng (/etc/syslog-ng/syslog-ng.conf):**\n```\ndestination d_oms {\n  tcp(\"127.0.0.1\" port(25224));\n};\nlog {\n  source(s_src);\n  destination(d_oms);\n};\n```\n\nRestart syslog: `sudo systemctl restart rsyslog`"
                  }
                ]
              },
              "type": "InstructionStepsGroup"
            }
          ]
        },
        {
          "title": "3. Configure data collection",
          "description": "Configure which syslog facilities and severity levels to collect.",
          "instructions": [
            {
              "parameters": {
                "connectorKind": "Syslog",
                "title": "Syslog",
                "enable": true
              },
              "type": "SentinelResourceProvider"
            }
          ]
        },
        {
          "title": "4. Validate syslog data ingestion",
          "description": "Test that syslog messages are being ingested into Microsoft Sentinel.",
          "instructions": [
            {
              "parameters": {
                "title": "Testing",
                "instructionSteps": [
                  {
                    "title": "",
                    "description": "1. Generate test message:\n   ```bash\n   logger -p auth.info \"Test message from $(hostname)\"\n   ```\n2. Wait 5-10 minutes for ingestion\n3. Run validation query in Microsoft Sentinel\n4. Check agent logs:\n   ```bash\n   sudo tail -f /var/opt/microsoft/omsagent/log/omsagent.log\n   ```"
                  }
                ]
              },
              "type": "InstructionStepsGroup"
            },
            {
              "parameters": {
                "query": "Syslog | where TimeGenerated > ago(30m) | take 10",
                "label": "Validation Query"
              },
              "type": "CopyableLabel"
            }
          ]
        }
      ]
    }
  }
}