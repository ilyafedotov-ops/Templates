# SonarQube Project Configuration for Security Analysis
# This configuration integrates with the GitLab CI security pipeline

# Project identification
sonar.projectKey=${CI_PROJECT_NAME}
sonar.projectName=${CI_PROJECT_NAME}
sonar.projectVersion=${CI_COMMIT_SHORT_SHA}

# Source code configuration
sonar.sources=.
sonar.sourceEncoding=UTF-8

# Language-specific configurations
sonar.javascript.lcov.reportPaths=coverage/lcov.info
sonar.python.coverage.reportPaths=coverage.xml
sonar.java.coveragePlugin=jacoco
sonar.jacoco.reportPaths=target/jacoco.exec

# Exclusions
sonar.exclusions=**/node_modules/**,**/vendor/**,**/tests/**,**/test/**,**/*.test.js,**/*.spec.js,**/coverage/**,**/build/**,**/dist/**

# Test configurations
sonar.tests=tests/,test/,src/test/
sonar.test.exclusions=**/node_modules/**,**/vendor/**

# Security-specific settings
sonar.security.review.enabled=true
sonar.qualitygate.wait=true

# Code coverage thresholds
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

# Static analysis rules
sonar.profile=Security

# Scanner optimization
sonar.log.level=INFO
sonar.showProfiling=false

# GitLab integration
sonar.gitlab.project_id=${CI_PROJECT_ID}
sonar.gitlab.commit_sha=${CI_COMMIT_SHA}
sonar.gitlab.ref_name=${CI_COMMIT_REF_NAME}
sonar.gitlab.user_token=${GITLAB_USER_TOKEN}

# Branch configuration
sonar.branch.name=${CI_COMMIT_REF_NAME}

# Pull request analysis (for merge requests)
# sonar.pullrequest.key=${CI_MERGE_REQUEST_IID}
# sonar.pullrequest.branch=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
# sonar.pullrequest.base=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}